DominoViews.registerView( 'Domino.ContentBlocks', function( data ) {	"use strict";	return {tag: "div", attrs: {}, children: [		 (function () {			if ( data ) {				var ret = [];				for (var i = 0; i < data.length; i++) {					var block = data[i];					if ( block.type )						ret.push(br("component", {view: 'Domino.ContentBlocks.Types.' + block.type,componentData:block }));					else if ( block.component ) {						var retContent = [];						if ( block.name )							retContent.push({tag: "h2", attrs: {}, children: [ block.name]});						if ( block.subtitle )							retContent.push({tag: "h3", attrs: {}, children: [ block.subtitle]});						if ( block.content )							retContent.push( DCUtil.displayHtml( block.content ) );						retContent.push( br("component", {view: block.component,componentData: block.componentData}) );						var retContainer = [];						if ( block.container || block.containerCol ) {							var container = block.container ? block.container : 'grid-container grid-x grid-padding-x';							var containerCell = block.containerCol ? block.containerCol : 'small-12 cell';							retContainer.push({tag: "div", attrs: {}, className:container , children: [								{tag: "div", attrs: {}, className:containerCell , children: [									retContent 								]}							]});						}						else							var retContainer = retContent;						if ( block.theme || block.class ) {							var cls = block.class ? block.class : '';							var theme = block.theme ? 'domino-contentblocks ' + block.theme : '';							ret.push({tag: "div", attrs: {}, className: theme + ' ' + cls, children: [retContainer ]});						}						else							ret.push( retContainer );					}				}				return ret;			}		})() 	]};});
