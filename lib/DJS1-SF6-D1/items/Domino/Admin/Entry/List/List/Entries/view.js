DominoViews.registerView( 'Domino.Admin.Entry.List.List.Entries', function( data ) {	"use strict";	var fillData = function (entryData, level, levInd ) {		var ret = [];		if ( entryData.entries ) {            for (var i = 0; i < entryData.entries.length; i++) {				var entry = entryData.entries[i];				var disp = ( level == 0 ) ? '' : '';                var levelIndex = ( level == 0 ) ? i : levInd + '|' + i;                if ( ( entryData.pagination.pages > 1 ) && ( i == 0 ) )					ret.push({tag: "tr", attrs: {parent: entry.parent}, className:'pagination',style:disp , children: [{tag: "td", attrs: {colspan: entryData.columns.length + 1}, children: [br("component", {view:"Domino.Admin.Entry.List.Pagination",componentData: entryData.pagination})]}]});                if ( entry.data )                    ret.push({tag: "tr", attrs: {entry: entry.entry,index:levelIndex }, className: 'list level' + level,style:disp , children: [ (function () {                        var ret2 = [];                        if ( entry.hasChildren )                            ret2.push({tag: "td", attrs: {name:"arrow",entry: entry.entry}, className:"tdArrow", children: [{tag: "span", attrs: {}, className:"arrow icon-arrow_right"}]});                        else                            ret2.push({tag: "td", attrs: {}, className:"tdArrow"});                        if ( entry.data ) {                            for (var col = 0; col < entryData.columns.length; col++) {                                var colData = entry.data[col],                                    column = entryData.columns[col],                                    clickable = ( column.clickable == true ) ? 'click' : '';                                var cData = {                                    options: data.options,                                    column: column,                                    data: colData,                                    link:  entry['link'],                                    id: entry['id'],                                    entry: entry.entry                                };                                ret2.push({tag: "td", attrs: {}, className:clickable , children: [br("component", {view: 'Domino.Admin.Entry.List.Field.' + column['structureItem'],componentData:cData })]});                                //ret2.push(<td class={ clickable }><a href={ entry.link }>{ colData }</a></td>);                            }                        }                        else                            ret2.push({tag: "td", attrs: {entry: entry.entry,colspan: entryData.columns.length}, children: [ entry['colName']," ",{tag: "small", attrs: {}, children: [ entry.entry]}]});                        return ret2;                    })() ]});                else                    ret.push({tag: "tr", attrs: {entry: entry.entry,index:levelIndex }, className:'list root',style:disp , children: [ (function () {                            var ret2 = [];                            if ( entry.hasChildren )                                ret2.push({tag: "td", attrs: {name:"arrow",entry: entry.entry}, children: [{tag: "span", attrs: {}, className:"arrow icon-arrow_right"}]});                            return ret2;                        })(),                        {tag: "td", attrs: {colspan: entryData.columns.length}, className:"click", children: [                             entry['colName']," ",{tag: "small", attrs: {}, children: [ entry.entry]}                        ]}                    ]});                var theEntry = false;                if ( entry.list )                    if ( entry.list.entries )                        if ( entry.list.entries.length > 0 )                            theEntry = true;                if ( entry.hasChildren && theEntry === false )                    ret.push({tag: "tr", attrs: {parent: entry.parent}, style:"display:none",className:"children", children: [{tag: "td", attrs: {colspan: entryData.columns.length + 1}}]});                else if ( entry.hasChildren && theEntry === true ) {                    ret.push({tag: "tr", attrs: {parent: entry.parent}, style:"display:none",className:"children", children: [                        {tag: "td", attrs: {colspan: entryData.columns.length + 1}, children: [{tag: "table", attrs: {}, children: [{tag: "tbody", attrs: {}, children: [ fillData( entry.list , (level + 1), levelIndex) ]}]}]}                    ]});                }			}		}		//var r = [];            return ret ;		//return r;	}        return {tag: "tbody", attrs: {}, children: [ fillData ( data, 0, 0) ]};} );
