DominoViews.registerView( 'Domino.Admin.Entry.List.Pagination', function( data ) {	"use strict";    if ( data.translate )        return {tag: "div", attrs: {}, className:"domino-pagination grid-x", children: [                    {tag: "div", attrs: {}, className:"small-12 medium-6 cell", children: [                         '' + data.translate.page," ",{tag: "span", attrs: {}, className:"pagination-current", children: [ '' + data.currentPage]}, " ", data.translate.pageOf," ",{tag: "span", attrs: {}, className:"pagination-all", children: [ '' + data.pages]}, " (", data.translate.allEntries,": ",{tag: "span", attrs: {}, className:"pagination-entries", children: [ '' + data.numEntries]}, ")"
                    ]},                      {tag: "div", attrs: {}, className:"small-12 medium-6 cell text-right", children: [                        {tag: "a", attrs: {href:"",name:"pagePrev"}, className: data.currentPage == 1 ? 'paginate active' : 'paginate', children: [                            {tag: "span", attrs: {}, className:"icon-arrow_left"}                        ]},                           (function () {                             var ret = [];                             for ( var i = 0; i < data.pages; i++ ) {                                 var page = i + 1;                                 var active = ( page == data.currentPage ) ? 'paginate active' : 'paginate';                                 // add sortable                                 ret.push( {tag: "a", attrs: {href: '' + page,name: '' + page}, className:active , children: [ '' + page]} );                             }                             return ret;                         })(),                        {tag: "a", attrs: {href:"",name:"pageNext"}, className: data.currentPage == data.pages ? 'paginate active' : 'paginate', children: [                            {tag: "span", attrs: {}, className:"icon-arrow_right"}                        ]}                    ]}        ]}} );
