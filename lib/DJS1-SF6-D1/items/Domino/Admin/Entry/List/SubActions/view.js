DominoViews.registerView( 'Domino.Admin.Entry.List.SubActions', function( data ) {	"use strict";	if ( data )		if ( data.buttons )		return {tag: "div", attrs: {}, className:"domino-subactions grid-x grid-padding-x", children: [						 (function () {							if ( data.buttons ) {								var ret = [];								for (var key in data.buttons) {									// skip loop if the property is from prototype									if (!data.buttons.hasOwnProperty(key)) continue;									var entry = data.buttons[key];									if ( key == 'filterEntries')										ret.push({tag: "div", attrs: {}, className:"pad shrink cell", children: [											{tag: "input", attrs: {type:"text",name:"FilterEntries",autocomplete:"off",placeholder:"Filtriraj ..."}, className:"filterEntries"}										]});									else if ( key == 'langSwitcher')										ret.push({tag: "div", attrs: {}, className: 'pad shrink cell ' + entry.position, children: [												 (function () {													var ret2 = [];													if ( data.dimensions.length )														ret2.push({tag: "span", attrs: {}, className:"text", children: ["Select language"]});													else {                                                        ret2.push({tag: "span", attrs: {}, className:"text", children: ["Language"]});                                                        ret2.push({tag: "a", attrs: {href:"#",lang: data.lang,disabled:true}, className:"is-active", children: [ data.lang]});													}													for ( var i = 0; i < data.dimensions.length; i++ ) {														var dimension = data.dimensions[i];														var buttonClass = ( dimension.id == data.lang ) ? 'is-active' : '';														ret2.push({tag: "a", attrs: {lang: dimension.id,name:"langSwitcher",href:"#"}, className:buttonClass , children: [ dimension.name]});													}													return ret2;												})() 										]});								}								return ret;							}						})() 				]}} );
