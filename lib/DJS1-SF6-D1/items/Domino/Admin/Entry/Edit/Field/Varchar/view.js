DominoViews.registerView( 'Domino.Admin.Entry.Edit.Field.Varchar', function( data ) {	"use strict";    if ( data.horizontal ) {        var col1 = 'small-12 cell';        var col2 = 'small-12 cell';    }    else {        var col1 = 'small-12 medium-3 large-2 cell';        var col2 = 'small-12 medium-9 large-4 end cell';    }	if ( data.dimensions && ( data.dimensional === true ) ) {		var ret = [];		for ( var i = 0; i < data.dimensions.length; i++ ) {			var dimension = data.dimensions[i];			var style = ( i == 0 ) ? '' : 'display:none';			ret.push({tag: "div", attrs: {name: 'dim' + dimension.id}, className:"grid-x grid-padding-x field",style:style , children: [				{tag: "div", attrs: {}, className:col1 , children: [					{tag: "span", attrs: {}, className:"title", children: [ data.name]}, " ",{tag: "span", attrs: {}, className:"dimension", children: [ dimension.name]}				]}, 				{tag: "div", attrs: {}, className:col2 , children: [					{tag: "input", attrs: {type:"text",name: dimension.id + '[' + data.element + ']',value: data.data[dimension.id],placeholder: data.placeholder}}				]}			]});		}		return ret;	}	else		return {tag: "div", attrs: {}, className:"grid-x grid-padding-x field", children: [				{tag: "div", attrs: {}, className:col1 , children: [					{tag: "span", attrs: {}, className:"title", children: [ data.name]}				]}, 				{tag: "div", attrs: {}, className:col2 , children: [					{tag: "input", attrs: {type:"text",name: data.element,value: data.data,placeholder: data.placeholder}}					]}				]}});
