DominoViews.registerView( 'Domino.Admin.Entry.Edit.Field.Cross', function( data ) {	"use strict";	return {tag: "div", attrs: {id:"cross"}, children: [		{tag: "div", attrs: {}, className:"grid-x grid-padding-x field", children: [			{tag: "div", attrs: {}, className:"small-12 medium-3 large-2 cell", children: [				{tag: "span", attrs: {}, className:"title", children: ["Add cross module"]}			]}, 			{tag: "div", attrs: {}, className:"small-12 medium-9 large-4 end cell", children: [				br("component", {view:"Domino.Admin.Entry.Selector",componentData: data.data.miniSelector})			]}			]},         {tag: "div", attrs: {}, className:"domino-cross-tabs", children: [			{tag: "ul", attrs: {}, className:"domino-cross-tabs-buttons", children: [				 (function () {					var entries = [];					if ( data.data )						for ( var i = 0; i < data.data.ModulesCrossed.length; i++ ) {							var entry = data.data.ModulesCrossed[i];                            var isactive = ( i == 0 ) ? 'is-active' : '';							entries.push( {tag: "li", attrs: {"data-id": 'CrossTabs' + entry.moduleRel}, className:isactive , children: [								{tag: "a", attrs: {href:"#"}, className:"selected", children: [ entry.moduleRel]}							]});						}					return entries;				})() 			]},             {tag: "div", attrs: {}, className:"domino-cross-tabs-content", children: [                 (function () {                    var entries = [];                    if ( data.data )                        for ( var i = 0; i < data.data.ModulesCrossed.length; i++ ) {                            var entry = data.data.ModulesCrossed[i];                            var isactive = ( i == 0 ) ? 'domino-cross-tabs-panel is-active' : 'domino-cross-tabs-panel';                            entries.push({tag: "div", attrs: {"data-id": 'CrossTabs' + entry.moduleRel}, className:isactive , children: [                                {tag: "h2", attrs: {}, children: [ entry.moduleRel]},                                 br("component", {view: 'Domino.Admin.Entry.Edit.Field.Cross.' + entry.type,componentData: entry.data})                            ]});                        }                    return entries;                })()             ]}        ]}	]}});
